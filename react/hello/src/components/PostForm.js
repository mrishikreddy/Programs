import React, { Component } from 'react'
import axios from 'axios'                       // importing axios library

class PostForm extends Component {
    constructor(props) {
      super(props)
    
      this.state = {                           // settinfg state to store values when user enter the values in state
        userId: '',
        title: '',
        body:''

      }
    }

    changeHandler=(e)=>{                                       
        this.setState({[e.target.name]:e.target.value})
    }
    submitHandler =(e)=>
    {
        e.preventDefault()
        console.log(this.state)
        
    axios
    .post('https://jsonplaceholder.typicode.com/posts',this.state)
    .then(response => console.log(response))
    .catch( error => console.log(error))
    }

    /*The argument e in both the changeHandler and submitHandler functions represents an event object. 
    This event object is automatically generated by the browser whenever a user interacts with a form element. 
    changeHandler: This function is called whenever the value of an input field changes. 
    The browser passes the event object (e) as an argument to this function.
    submitHandler: This function is called when the user submits the form. Similar to changeHandler, 
    the browser also passes the event object (e) as an argument. In this case, you typically use e.preventDefault() 
    to prevent the default form submission behavior and then access the state of your component (which holds the form data) to perform further actions, 
    such as making an API call using axios in this example.
    */
    
  render() {
    const {userId,title,body} = this.state
    return (
      <div>
        <form onSubmit={this.submitHandler}>
            <div>
                <input type="text" 
                name="userId" 
                value={userId} 
                onChange={this.changeHandler}/>
            </div>
            <div>
                <input 
                type="text" 
                name="title" 
                value={title} 
                onChange={this.changeHandler}/>
            </div>
            <div>
                <input 
                type="text" 
                name="body" 
                value={body} 
                onChange={this.changeHandler}/>
            </div>
            <button type='submit'>Submit</button>
        </form>
      </div>
    )
  }
}

export default PostForm